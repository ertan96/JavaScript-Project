{"version":3,"file":"main.js","mappings":"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","sources":["webpack://jsproject/./src/moving_object.js","webpack://jsproject/./src/pokemon.js","webpack://jsproject/./src/pair.js","webpack://jsproject/./src/game.js","webpack://jsproject/./src/index.js"],"sourcesContent":["class MovingObject {\r\n    constructor(imagePath, canvas, ctx, scale) {\r\n        this.image = new Image();\r\n        this.image.src = imagePath;\r\n        this.canvas = canvas;\r\n        this.ctx = ctx;\r\n        this.scale = scale;\r\n        this.width = 0;\r\n        this.height = 0;\r\n        this.x = 0;\r\n        this.y = 0;\r\n        this.dx = 1; // Speed in the x-axis\r\n        this.dy = 1; // Speed in the y-axis\r\n        this.angle = 0; // Allowing spinning of my pokemon image/silhouette\r\n        this.move = this.move.bind(this);\r\n\r\n        this.image.onload = () => {\r\n            this.width = this.image.width * this.scale;\r\n            this.height = this.image.height * this.scale;\r\n            this.x = Math.random() * (this.canvas.width - this.width);\r\n            this.y = Math.random() * (this.canvas.height - this.height);\r\n            this.draw();\r\n        };\r\n    }\r\n\r\n    move () {\r\n        this.x += this.dx;\r\n        this.y += this.dy;\r\n        this.angle += 0.02; // Spinning Speed adjustments\r\n\r\n        if (this.x + this.width > this.canvas.width || this.x < 0) {\r\n            this.dx *= -1;\r\n        }\r\n        if (this.y + this.height > this.canvas.height || this.y < 0) {\r\n            this.dy *= -1;\r\n        }\r\n        \r\n    }\r\n\r\n    draw() {\r\n        // this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);  // clears canvas constantly everytime drawn\r\n        this.move();\r\n\r\n        this.ctx.save();\r\n        this.ctx.translate(this.x + this.width / 2, this.y + this.height / 2);\r\n        this.ctx.rotate(this.angle);\r\n        this.ctx.drawImage(this.image, -this.width / 2, -this.height / 2, this.width, this.height);\r\n        this.ctx.restore();\r\n    \r\n        // requestAnimationFrame(() => this.draw());\r\n    }\r\n\r\n    startAnimation() {\r\n        this.draw();\r\n    }\r\n}\r\n\r\nexport default MovingObject;","import MovingObject from \"./moving_object\";\r\n\r\nclass Pokemon extends MovingObject {\r\n\r\n    constructor(imagePath, canvas, ctx, scale, isSilhouette = true) {\r\n        super(imagePath, canvas, ctx, scale);\r\n        this.imagePath = imagePath;\r\n        this.isSilhouette = isSilhouette;\r\n        this.isRevealed = false;\r\n    }\r\n\r\n    applySilhouette(imageData) { //function was pulled from a script online for silhouette on canvas\r\n        const data = imageData.data;\r\n    \r\n        for (let i = 0; i < data.length; i += 4) {\r\n            // Check if the pixel is not fully transparent\r\n            if (data[i + 3] !== 0) {\r\n                data[i] = 0; // Set red channel to black\r\n                data[i + 1] = 0; // Set green channel to black\r\n                data[i + 2] = 0; // Set blue channel to black\r\n            }\r\n        }\r\n    \r\n        return imageData;\r\n    }\r\n\r\n    draw() { \r\n        super.draw();\r\n\r\n        if (this.isSilhouette && !this.isRevealed) { // applies silhouette if instance is a silhouette but not revealed\r\n            const imageData = this.ctx.getImageData(0, 0, this.canvas.width, this.canvas.height);\r\n            const silhouetteData = this.applySilhouette(imageData);\r\n            this.ctx.putImageData(silhouetteData, 0, 0);\r\n        }\r\n\r\n        // if (this.isSilhouette) {\r\n        //     const imageData = this.ctx.getImageData(0, 0, this.canvas.width, this.canvas.height);\r\n        //     const silhouetteData = this.applySilhouette(imageData);\r\n        //     this.ctx.putImageData(silhouetteData, 0, 0);\r\n        // }\r\n\r\n        // if (this.isRevealed) {\r\n        //     const imageData = this.ctx.getImageData(0, 0, this.canvas.width, this.canvas.height);\r\n        //     console.log('hit');\r\n        //     this.ctx.putImageData(imageData, 0, 0);\r\n        // }\r\n    }\r\n    \r\n    // animate() {\r\n    //     return new Promise(resolve => {\r\n    //         const frame = () => {\r\n    //             this.move();\r\n    //             this.draw();\r\n\r\n    //             if (this.isRevealed) {\r\n    //                 resolve();\r\n    //             } else {\r\n    //                 requestAnimationFrame(frame);\r\n    //             }\r\n    //         }\r\n    //         requestAnimationFrame(frame);\r\n    //     });\r\n    // }\r\n\r\n    reveal() { // Reveal the actual image if this isn't a silhouette\r\n\r\n        this.isRevealed = true;\r\n        this.isSilhouette = false;\r\n        this.startAnimation();\r\n        // console.log(`Pokemon class.reveal: Pokemon revealed: ${this.isRevealed}`);\r\n    }\r\n\r\n}\r\n\r\nexport default Pokemon;","import Pokemon from './pokemon.js';\r\n\r\nclass Pair {\r\n    constructor(imagePath, canvas, ctx, scale) {\r\n        this.silhouette = new Pokemon(imagePath, canvas, ctx, scale, true);\r\n        this.actual = new Pokemon(imagePath, canvas, ctx, scale, true);\r\n    }\r\n\r\n    draw() {\r\n        // console.log(this.silhouette.isRevealed, 'draw.isRevealed');\r\n        if (this.actual.isRevealed) {\r\n            this.actual.draw();\r\n        } else {\r\n            this.silhouette.draw();\r\n        }\r\n    }\r\n\r\n    // stopAnimatingSilhouette() {\r\n    //     this.silhouette.isRevealed = true; // stop the silhouette from animating\r\n    // }\r\n\r\n    reveal() {\r\n        this.actual.reveal();\r\n        this.silhouette.reveal();\r\n        // this.silhouette.isRevealed = true;\r\n        // this.silhouette.isSilhouette = false;\r\n        // this.silhouette.isRevealed = false; // make sure the silhouette is not revealed after actual is revealed\r\n        // this.stopAnimatingSilhouette(); // stop the silhouette from animating\r\n        console.log('Pair class reveal: 321');\r\n    }\r\n\r\n}\r\n\r\nexport default Pair;","import Pair from './pair.js';\r\n\r\nclass Game {\r\n    constructor () {\r\n        this.canvas = document.getElementById('view-canvas');\r\n        this.canvas.width = 500;\r\n        this.canvas.height = 500;\r\n        this.ctx = this.canvas.getContext(\"2d\", { willReadFrequently: true }); //this is added due to console error to improve performance\r\n        this.pokemons = [];\r\n        this.pairs = [];\r\n        \r\n    }\r\n\r\n    start () {\r\n        const allPairs = [\r\n            new Pair('./src/pokemonImages/pikachu.png', this.canvas, this.ctx, 0.1),\r\n            new Pair('./src/pokemonImages/emolga.png', this.canvas, this.ctx, 0.2),\r\n            new Pair('./src/pokemonImages/bulbasaur.png', this.canvas, this.ctx, 0.3),\r\n            new Pair('./src/pokemonImages/ivysaur.png', this.canvas, this.ctx, 0.3),\r\n            new Pair('./src/pokemonImages/venusaur.png', this.canvas, this.ctx, 0.3),\r\n            new Pair('./src/pokemonImages/charmander.png', this.canvas, this.ctx, 0.3),\r\n            new Pair('./src/pokemonImages/charmeleon.png', this.canvas, this.ctx, 0.3),\r\n            new Pair('./src/pokemonImages/charizard.png', this.canvas, this.ctx, 0.3),\r\n            new Pair('./src/pokemonImages/squirtle.png', this.canvas, this.ctx, 0.3),\r\n            new Pair('./src/pokemonImages/wartortle.png', this.canvas, this.ctx, 0.3),\r\n            new Pair('./src/pokemonImages/blastoise.png', this.canvas, this.ctx, 0.3)\r\n        ]\r\n\r\n        // const pairObj = {\r\n        //     pikachu: new Pair('./src/pokemonImages/pikachu.png', this.canvas, this.ctx, 0.1),\r\n        //     emnolga: new Pair('./src/pokemonImages/emolga.png', this.canvas, this.ctx, 0.2),\r\n        //     bulbasaur: new Pair('./src/pokemonImages/bulbasaur.png', this.canvas, this.ctx, 0.3),\r\n        //     ivysaur: new Pair('./src/pokemonImages/ivysaur.png', this.canvas, this.ctx, 0.3),\r\n        //     venusaur: new Pair('./src/pokemonImages/venusaur.png', this.canvas, this.ctx, 0.3),\r\n        //     charmander: new Pair('./src/pokemonImages/charmander.png', this.canvas, this.ctx, 0.3),\r\n        //     charmeleon: new Pair('./src/pokemonImages/charmeleon.png', this.canvas, this.ctx, 0.3),\r\n        //     charizard: new Pair('./src/pokemonImages/charizard.png', this.canvas, this.ctx, 0.3),\r\n        //     squritle: new Pair('./src/pokemonImages/squirtle.png', this.canvas, this.ctx, 0.3),\r\n        //     wartortle: new Pair('./src/pokemonImages/wartortle.png', this.canvas, this.ctx, 0.3),\r\n        //     blastoise: new Pair('./src/pokemonImages/blastoise.png', this.canvas, this.ctx, 0.3)\r\n        // };\r\n        \r\n        for (let i = 0; i < 4; i++) { // pushes 4  \r\n            const randomIndex = Math.floor(Math.random() * allPairs.length);\r\n            const selectedPair = allPairs.splice(randomIndex, 1)[0]; // Removes the selected pair from allPairs array\r\n            this.pairs.push(selectedPair);\r\n        }\r\n\r\n        this.hiddenPairIndex = Math.floor(Math.random() * this.pairs.length); // the hidden pair is the one displayed on the table and at a random position\r\n        window.pairs = this.pairs;\r\n        \r\n        this.animate();\r\n    }\r\n\r\n    \r\n\r\n    animate() { //function allows multiple images on the canvas\r\n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n    \r\n\r\n        this.pairs.forEach((pair, index) => {\r\n            if (index !== this.hiddenPairIndex) {\r\n\r\n                pair.draw();\r\n            }\r\n        });\r\n    \r\n        requestAnimationFrame(() => this.animate());\r\n    }\r\n\r\n    revealPair(index) { //grabs the index of the pairs array and reveals it\r\n        console.log(`Revealing pair at index ${index}`);\r\n        // this.pairs[index].actual.reveal();\r\n        this.pairs[index].reveal();\r\n        console.log(`Pair revealed: ${this.pairs[index].actual.isRevealed}`);\r\n    }\r\n\r\n    isGameWon() {  //changed this so the array does not have all silhouettes in the array to trigger true/false but only for silhouettes floating on canvas\r\n        const activePairs = this.pairs.filter((pair, index) => index !== this.hiddenPairIndex);  \r\n        return activePairs.every(pair => pair.actual.isRevealed);\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Game;","import Game from \"./game.js\"\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n    console.log('Webpack testing works')\r\n\r\n    const startButton = document.getElementById('start-button');\r\n    \r\n    startButton.addEventListener('click', () => {\r\n        console.log(\"button is getting clicked\");\r\n        const game = new Game();\r\n        game.start();\r\n        createTable(game);\r\n    });\r\n\r\n    function createTable(game) {\r\n        const container = document.querySelector('.container');\r\n        const table = document.createElement('table');\r\n        const numPairs = game.pairs.length;\r\n        for (let i = 0; i < 2; i++) {\r\n            const row = document.createElement('tr');\r\n            for (let j = 0; j < 2; j++) {\r\n                const cell = document.createElement('td');\r\n                const imgButton = document.createElement('img');\r\n                const index = i*2 + j;\r\n                if (index < numPairs) {\r\n                    imgButton.src = game.pairs[index].actual.imagePath; // set the image source to the actual Pokemon image\r\n                    imgButton.dataset.pokemon = index; // Assign the index to the button\r\n                    imgButton.classList.add('pokemon-button'); // Add a class for styling\r\n                }\r\n                cell.appendChild(imgButton);\r\n                row.appendChild(cell);\r\n            }\r\n            table.appendChild(row);\r\n        }\r\n        container.appendChild(table);\r\n    \r\n        // Adds the event listener 'click' for the buttons\r\n        table.addEventListener('click', (e) => {\r\n            if (e.target.tagName === 'IMG') {\r\n                const index = parseInt(e.target.dataset.pokemon);\r\n                if (index === game.hiddenPairIndex) {\r\n                    // Player loses\r\n                    console.log('You lose!');\r\n                } else {\r\n                    game.revealPair(index);\r\n                    if (game.isGameWon()) {\r\n                        console.log('You win!');\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n});"],"names":["constructor","imagePath","canvas","ctx","scale","this","image","Image","src","width","height","x","y","dx","dy","angle","move","bind","onload","Math","random","draw","save","translate","rotate","drawImage","restore","startAnimation","MovingObject","isSilhouette","arguments","length","undefined","super","isRevealed","applySilhouette","imageData","data","i","getImageData","silhouetteData","putImageData","reveal","silhouette","Pokemon","actual","console","log","document","getElementById","getContext","willReadFrequently","pokemons","pairs","start","allPairs","Pair","randomIndex","floor","selectedPair","splice","push","hiddenPairIndex","window","animate","clearRect","forEach","pair","index","requestAnimationFrame","revealPair","isGameWon","filter","every","addEventListener","game","Game","container","querySelector","table","createElement","numPairs","row","j","cell","imgButton","dataset","pokemon","classList","add","appendChild","e","target","tagName","parseInt","createTable"],"sourceRoot":""}